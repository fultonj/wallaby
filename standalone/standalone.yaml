---
- hosts: allovercloud
  gather_facts: false
  become: true
  vars: # add IP on fake vlan to use for standalone (24.1 taken by undercloud)
    ip: 192.168.23.1
    vlan: 666
    dev: ens4
    pkgs:
      - python3-tripleoclient
    mirror_files:
      - /etc/yum.repos.d/delorean.repo
      - /home/stack/generated-container-prepare.yaml
  tasks:
    - name: ensure stack group exists
      group:
        name: stack
        state: present
    - name: ensure stack user exists
      user:
        name: stack
        comment: stack
        group: stack
        groups: wheel
        generate_ssh_key: yes
    - name: give stack user same authorized_keys as heat-admin
      copy:
        remote_src: true
        src: /home/heat-admin/.ssh/authorized_keys
        dest: /home/stack/.ssh/authorized_keys
        owner: stack
        group: stack
        mode: '0644'
    - name: enable passwordless sudo for wheel group
      lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
    - name: create /etc/hosts entry back to undercloud
      lineinfile:
        path: /etc/hosts
        regexp: '^192\.168\.24\.1'
        line: 192.168.24.1 undercloud.ctlplane.mydomain.tld undercloud.ctlplane undercloud
        owner: root
        group: root
        mode: '0644'
    - name: set standalone hostname
      hostname:
        name: standalone.localdomain
    - name: ensure standalone hostname fits transient requirement
      command: hostnamectl set-hostname standalone.localdomain --transient
    - name: copy mirror files (where src=dest)
      copy:
        src: "{{ item }}"
        dest: "{{ item }}"
        owner:  "{% if '.yaml' in item %}stack{% else %}root{% endif %}"
        group:  "{% if '.yaml' in item %}stack{% else %}root{% endif %}"
      loop: "{{ mirror_files }}"
    - name: install python3-tripleo-repos package
      dnf:
        name: python3-tripleo-repos
        state: latest
    - name: Run tripleo-repos
      command: tripleo-repos current-tripleo-dev
    - name: install pkgs
      dnf:
        name: "{{ item }}"
        state: latest
      loop: "{{ pkgs }}"
    - name: Unmanage dev
      command: "nmcli dev set {{ dev }} managed no"
    - name: switch bootproto of dev to none
      lineinfile:
        path: "/etc/sysconfig/network-scripts/ifcfg-{{ dev }}"
        regexp: '^BOOTPROTO='
        line: BOOTPROTO=none
    - name: create vlan file for dev
      copy:
        dest: "/etc/sysconfig/network-scripts/ifcfg-vlan-{{ vlan }}"
        content: |
          VLAN=yes
          TYPE=Vlan
          PHYSDEV={{ dev }}
          VLAN_ID={{ vlan }}
          REORDER_HDR=yes
          GVRP=no
          MVRP=no
          PROXY_METHOD=none
          BROWSER_ONLY=no
          BOOTPROTO=none
          IPADDR={{ ip }}
          PREFIX=24
          DEFROUTE=yes
          IPV4_FAILURE_FATAL=no
          IPV6INIT=yes
          IPV6_AUTOCONF=yes
          IPV6_DEFROUTE=yes
          IPV6_FAILURE_FATAL=no
          IPV6_ADDR_GEN_MODE=stable-privacy
          NAME=vlan-{{ vlan }}
          DEVICE={{ dev }}.{{ vlan}}
          ONBOOT=yes
    - name: bring up vlan
      shell: "ifdown {{ dev }}; ifup {{ dev }}; ifup vlan-{{ vlan }};"
      register: ifcmds
    - name: show vlan ifup results
      debug:
        msg: "{{ ifcmds.stdout }}"
    - name: look for default route
      shell: "ip r | grep default"
      register: ipr
    # address side effect of adding other network
    - name: bring down old default route
      command: "route del default gw {{ my_ip }} {{ my_dev }}"
      vars:
        - my_dev: "{{ ipr.stdout.split()[4] }}"
        - my_ip: "{{ ipr.stdout.split()[2] }}"
      when:
        - ipr.stdout != ""
    - name: bring up new default route
      command: "route add default gw 192.168.100.1 {{ dev }}.100"
