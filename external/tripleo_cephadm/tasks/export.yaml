---
# Creates a file which tripleo_ceph_client role can pass to include_vars
# The file will be saved in the path "{{ tripleo_ceph_client_vars }}"
# Assumes the following module is in ANSIBLE_LIBRARY=/usr/share/ansible/library/
#   https://github.com/ceph/ceph-ansible/blob/master/library/ceph_key.py

- name: Get ceph_cli
  include_tasks: ceph_cli.yaml

- name: Generate minimal Ceph config to get all ceph monitors
  command: "{{ ceph_cli }} config generate-minimal-conf"
  register: ceph_gen_min_conf
  become: true

- name: Create temporary file to store ceph config
  tempfile:
    state: file
    suffix: temp
  register: ceph_temp
  delegate_to: localhost

- name: Store ceph config in temporary file in INI format
  copy:
    content: "{{ ceph_gen_min_conf.stdout }}"
    dest: "{{ ceph_temp.path }}"
  delegate_to: localhost

- name: Extract external_cluster_mon_ips from temporary INI file
  set_fact:
    external_cluster_mon_ips:
      "{{ lookup('ini', 'mon_host section=global file={{ ceph_temp.path }}') }}"
  delegate_to: localhost

- name: Delete temporary ceph INI file  
  file:
    path: "{{ ceph_temp.path }}"
    state: absent
  when: ceph_temp.path is defined
  delegate_to: localhost

- name: Extract keys
  ceph_key:
    name: "{{ item }}"
    state: info
  environment:
    CEPH_CONTAINER_IMAGE: "{{ ceph_container_ns + '/' + ceph_container_image + ':' + ceph_container_tag }}"
    CEPH_CONTAINER_BINARY: "{{ container_cli }}"
  register: client_keys
  become: true
  loop: "{{ cephx_keys }}"
  when: cephx_keys | length > 0

- name: Save tripleo_ceph_client_vars file
  template:
    src: templates/ceph_client.yaml.j2
    dest: "{{ tripleo_ceph_client_vars }}"
    mode: 0644
    force: true
  delegate_to: localhost
